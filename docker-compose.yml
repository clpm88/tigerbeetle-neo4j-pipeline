version: '3.8'

services:
  # TigerBeetle Database
  tigerbeetle:
    image: ghcr.io/tigerbeetle/tigerbeetle:latest
    privileged: true
    ports:
      - "3000:3000"
    volumes:
      - tigerbeetle_data:/data
    command: ["start", "--addresses=0.0.0.0:3000", "--development", "/data/tigerbeetle.tigerbeetle"]
    healthcheck:
      test: ["CMD-SHELL", "echo 'health check' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Redpanda (Kafka-compatible streaming platform)
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: redpanda
    ports:
      - "19092:19092"  # Kafka API
      - "19644:9644"   # Admin API
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    command:
      - redpanda
      - start
      - --kafka-addr=internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr=internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr=internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr=internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr=internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr=redpanda:33145
      - --advertise-rpc-addr=redpanda:33145
      - --smp=1
      - --memory=1G
      - --mode=dev-container
      - --default-log-level=info
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

  # Redpanda Console (Web UI for Kafka/Redpanda)
  redpanda-console:
    image: redpandadata/console:latest
    ports:
      - "8080:8080"
    depends_on:
      - redpanda
    environment:
      KAFKA_BROKERS: redpanda:9092
      CONFIG_FILEPATH: /tmp/config.yml
    volumes:
      - ./docker/redpanda-console-config.yml:/tmp/config.yml

  # Prometheus (Metrics Collection)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=15d'
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana (Metrics Visualization)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"  # Using 3001 to avoid conflict with TigerBeetle
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Neo4j Database (commented out - using Neo4j AuraDB instead)
  # Uncomment this section if you want to use local Neo4j instead of AuraDB
  # neo4j:
  #   image: neo4j:5.15
  #   ports:
  #     - "7474:7474"  # HTTP
  #     - "7687:7687"  # Bolt
  #   volumes:
  #     - neo4j_data:/data
  #     - neo4j_logs:/logs
  #   environment:
  #     NEO4J_AUTH: neo4j/password
  #     NEO4J_PLUGINS: '["apoc"]'
  #     NEO4J_dbms_security_procedures_unrestricted: apoc.*
  #     NEO4J_dbms_security_procedures_allowlist: apoc.*
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:7474/db/data/ || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s

volumes:
  tigerbeetle_data:
  redpanda_data:
  prometheus_data:
  grafana_data:
  # neo4j_data:  # Commented out since using AuraDB
  # neo4j_logs:  # Commented out since using AuraDB
